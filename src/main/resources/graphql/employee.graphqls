type EmployeeDto implements Person {
    uuid: String!
    name: String!
    dateOfBirth: Date!
    gender: Gender!
    salary: BigDecimal!
    address: [AddressDto!]
    age: PositiveInt!
    phone: String!
    companyName: String!
    active: Boolean!

    employeeId: String!
    departmentNo: String!,
    email: String!
    role: Role
}


enum Gender {
    MALE, FEMALE
}

enum Role {
    INTERN, SUPERVISOR, MANAGER, GMD
}

input EmployeeInput {

    name: String!
    dateOfBirth: Date!
    gender: Gender!
    salary: BigDecimal! @Digits(integer: 10, fraction: 4, message: "Salary cannot exceed length 10 and max decimal 4")
    address: [AddressInput!] @NotEmpty(message: "address cannot be empty")
    age: PositiveInt! # advise students to use Int to be able to use Pattern
    phone: String! @Pattern(regexp: "^[0-9]{10,17}$", message: "phone must be a number between 10-17 digits")

    employeeId: String! @NotBlank(message: "Employee Id is required")
    departmentNo: PositiveInt!, @NotBlank(message: "Department No is required")
    email: String! @NotBlank(message: "Email is mandatory")
    role: Role
}

input EmployeeUpdateInput {
    employeeId: String!, @NotBlank(message: "Employee Id is required")
    salary: BigDecimal!,@Digits(integer: 10, fraction: 4, message: "Salary cannot exceed length 10 and max decimal 4")
    age: PositiveInt!  # advise students to use Int to be able to use Pattern
    role: Role
}

input EmployeeSearchInput {
    name: String,
    dobStart: Date,
    dobEnd: Date,
    gender: Gender,
    salaryFrom: BigDecimal,
    salaryTo: BigDecimal,
    ageStart: PositiveInt,
    ageEnd: PositiveInt,
    role: Role
}


# added this for pagination else the error below occurs
#errors=[The field type 'Employee' is not present when resolving type 'EmployeeEdge'
type Employee @connection{
    uuid: String!
    name: String!
    dateOfBirth: Date!
    gender: Gender!
    salary: BigDecimal!
    age: PositiveInt!
    phone: String!
    companyName: String!
    active: Boolean!

    employeeId: String!
    departmentNo: String!,
    email: String!
    role: Role
}


type EmployeePagination {
    employeeConnection: EmployeeConnection,
    page: Int!,
    size: Int!,
    totalPage: Int!,
    totalElement: Long!
}