name: build push image for deployment
on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build-job-section:
    environment: action
    runs-on: ubuntu-latest

    container: postgres
    services:
      postgres:
        image: 'postgres:16.2'
        env:
          POSTGRES_DB: ${{ vars.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
          POSTGRES_USER: ${{ secrets.USERNAME }}
        ports:
          - 5432:5432

    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up JDK GraalVm 22
        run: |
          apt-get update -y &&  apt-get upgrade -y && apt-get install wget -y \
          && wget https://download.oracle.com/graalvm/22/archive/graalvm-jdk-22.0.1_linux-x64_bin.tar.gz \
          && wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz \
          && tar -xf graalvm-jdk-*_bin.tar.gz \
          && tar -xf apache-maven-3.9.9-bin.tar.gz \
          && rm graalvm-*.tar.gz && rm apache-maven-3.9.9-bin.tar.gz \
          && echo 'export JAVA_HOME=graalvm-jdk-22.0.1+8.1' >> ~/.bashrc \
          && echo 'export MAVEN_HOME=apache-maven-3.9.9' >> ~/.bashrc \
          && cat ~/.bashrc \
          && echo "$GITHUB_WORKSPACE/apache-maven-3.9.9/bin" >>  $GITHUB_PATH \
          && echo "$GITHUB_WORKSPACE/graalvm-jdk-22.0.1+8.1/bin" >>  $GITHUB_PATH \
          && echo 'export PATH=$GITHUB_WORKSPACE/apache-maven-3.9.9/bin:$GITHUB_WORKSPACE/graalvm-jdk-22.0.1+8.1/bin:$PATH' >> ~/.bashrc \
          && source ~/.bashrc \
          && echo "printing yea" && ls \
          && java -version && mvn -version \

      - name: prepare graalvm setup and build
        run: |
          java -version && mvn -version \
          && apt-get install -y build-essential zlib1g-dev \
          && mvn clean -Pnative native:compile -DskipTests -Dparallel=all -DperCoreThreadCount=true -Duser.timezone=Africa/Lagos -Djava.security.egd=file:/dev/./urandom -Dspring-boot.run.profiles=${{ vars.SPRING_PROFILE }}

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
         path: ~/.m2/repository
         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
         restore-keys: |
           ${{ runner.os }}-maven-

      - name: list files
        run: ls target/**

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: graphql-demo-artifact
          path: |
            target/graphql-course-demo
            Dockerfile
          overwrite: 'true'
          retention-days: 5

  push-image-section:
    environment: action
    needs: build-job-section
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: graphql-demo-artifact

      - name: Output downloaded contents
        run: ls && ls target/**

      - name: docker install
        run: |
          sudo apt-get update -y &&  sudo apt-get upgrade -y && sudo apt-get install curl -y \
          && sudo curl -fsSL https://get.docker.com -o get-docker.sh \
          && sudo sh get-docker.sh
      - name: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/gdemo:1.0
          context: .